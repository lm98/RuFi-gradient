name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

jobs:
  check:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    name: Run tests on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        id: rust-toolchain
        with:
          toolchain: stable

      - name: Show Env
        run: cargo --version

      - name: Cargo test
        run: cargo test --verbose

  test-release:
    name: Test Release
    needs:
      - check
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    concurrency:
      group: test-release-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        id: rust-toolchain
        with:
          toolchain: stable

      - name: Login on crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install
          npx semantic-release --dry-run

  release:
    if: github.event_name == 'push'
    needs:
      - check
      - test-release
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        id: rust-toolchain
        with:
          toolchain: stable

      - name: Login on crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install
          npx semantic-release

  success:
    runs-on: ubuntu-latest
    needs:
      - check
      - test-release
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}